@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
  --text-quaternary: #cdcdcd;
}

textarea:focus {
  border-color: inherit;
  box-shadow: none;
  outline: none
}

::-webkit-scrollbar {
  height: 1rem;
  width: .5rem
}

::-webkit-scrollbar:horizontal {
  height: .5rem;
  width: 1rem
}

::-webkit-scrollbar-track {
  background-color: transparent;
  border-radius: 9999px
}

::-webkit-scrollbar-thumb {
  --tw-border-opacity: 1;
  background-color: hsla(0,0%,89%,.8);
  border-color: rgba(255,255,255,var(--tw-border-opacity));
  border-radius: 9999px;
  border-width: 1px
}

::-webkit-scrollbar-thumb:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(227,227,227,var(--tw-bg-opacity))
}

.icon-md {
  stroke-width: 1.5;
}

.icon-md,.icon-md-heavy {
  flex-shrink: 0;
  height: 18px;
  width: 18px
}
.icon-sm,.icon-sm-heavy {
  flex-shrink: 0;
  height: 1rem;
  width: 1rem
}

input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus, 
input:-webkit-autofill:active{
    -webkit-box-shadow: 0 0 0 30px white inset !important;
}

input:autofill,
input:autofill:hover, 
input:autofill:focus, 
input:autofill:active{
    box-shadow: 0 0 0 30px white inset !important;
}


/* code.hljs {
  word-wrap: normal;
  background: none;
  color: #fff;
  -webkit-hyphens: none;
  hyphens: none;
  line-height: 1.5;
  tab-size: 4;
  text-align: left;
  white-space: pre;
  word-break: normal;
  word-spacing: normal;
} */

.markdown {
  max-width: none
}

.markdown h1 {
  font-weight: 600
}

.markdown h1:first-child {
  margin-top: 0
}

.markdown h2 {
  font-weight: 600;
  margin-bottom: 1rem;
  margin-top: 2rem
}

.markdown h2:first-child {
  margin-top: 0
}

.markdown h3 {
  font-weight: 600;
  margin-bottom: .5rem;
  margin-top: 1rem
}

.markdown h3:first-child {
  margin-top: 0
}

.markdown h4 {
  font-weight: 600;
  margin-bottom: .5rem;
  margin-top: 1rem
}

.markdown h4:first-child {
  margin-top: 0
}

.markdown h5 {
  font-weight: 600
}

.markdown h5:first-child {
  margin-top: 0
}

.markdown blockquote {
  --tw-border-opacity: 1;
  border-color: rgba(155,155,155,var(--tw-border-opacity));
  border-left-width: 2px;
  line-height: 1.5rem;
  margin: 0;
  padding-bottom: .5rem;
  padding-left: 1rem;
  padding-top: .5rem
}

.markdown blockquote>p {
  margin: 0
}

.markdown blockquote>p:after,.markdown blockquote>p:before {
  display: none
}

.markdown table {
  --tw-border-spacing-x: 0px;
  --tw-border-spacing-y: 0px;
  border-collapse: separate;
  border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  margin-bottom: .25rem;
  margin-top: .25rem;
  width: 100%
}

.markdown th {
  background-color: rgba(0,0,0,.1);
  background-color: var(--border-light);
  border-bottom-width: 1px;
  border-color: rgba(0,0,0,.15);
  border-color: var(--border-medium);
  border-left-width: 1px;
  border-top-width: 1px;
  padding: .25rem .75rem
}

.markdown th:first-child {
  border-top-left-radius: .375rem
}

.markdown th:last-child {
  border-right-width: 1px;
  border-top-right-radius: .375rem
}

.markdown td {
  border-bottom-width: 1px;
  border-color: rgba(0,0,0,.15);
  border-color: var(--border-medium);
  border-left-width: 1px;
  padding: .25rem .75rem
}

.markdown td:last-child {
  border-right-width: 1px
}

.markdown tbody tr:last-child td:first-child {
  border-bottom-left-radius: .375rem
}

.markdown tbody tr:last-child td:last-child {
  border-bottom-right-radius: .375rem
}

.markdown a {
  color: #2964aa;
  color: var(--link);
  font-weight: 400;
  text-decoration-line: none
}

.markdown a:hover {
  color: #749ac8;
  color: var(--link-hover)
}


code.hljs, code[class*=language-], pre[class*=language-] {
  word-wrap: normal;
  background: none;
  color: #fff;
  -webkit-hyphens: none;
  hyphens: none;
  line-height: 1.5;
  tab-size: 4;
  text-align: left;
  white-space: pre;
  word-break: normal;
  word-spacing: normal
}

:not(pre)>code.hljs, :not(pre)>code[class*=language-] {
  border-radius: .3em;
  padding: .1em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before,
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  display: none;
}